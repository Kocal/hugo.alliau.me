{% extends '@EasyAdmin/crud/index.html.twig' %}

{% block configured_javascripts %}
    {{ parent() }}
    <script>
        (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
            key: "{{ GOOGLE_PLACES_PRIVATE_API_KEY }}",
            v: "weekly",
        });
    </script>

    <script>
        async function initMap() {
            const {Autocomplete} = await google.maps.importLibrary("places");

            const autocomplete = new Autocomplete(document.querySelector('[name="address_autocomplete"]'), {
                fields: [
                    'name',
                    'formatted_address',
                    'address_components',
                    'url',
                    'icon_mask_base_uri',
                    'types',
                    'geometry',
                ]
            });

            autocomplete.addListener("place_changed", () => {
                const place = autocomplete.getPlace();
                document.querySelector('[name="place_autocomplete"]').value = JSON.stringify(place);
            });
        }

        initMap();
    </script>
{% endblock %}